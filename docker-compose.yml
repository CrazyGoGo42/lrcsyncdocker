services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lyrics_sync
      POSTGRES_USER: lyrics_user
      POSTGRES_PASSWORD: lyrics_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis Cache & Job Queue
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://lyrics_user:lyrics_password@db:5432/lyrics_sync
      REDIS_URL: redis://redis:6379
      PORT: 5000
      MUSIC_PATH: /app/music
      CACHE_PATH: /app/cache
      FRONTEND_URL: http://localhost:3000
    volumes:
      - ./music:/app/music # Mount your music directory here
      - ./cache:/app/cache # Cache directory for performance and persistence
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
